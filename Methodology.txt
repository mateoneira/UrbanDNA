DATABASE:

Python libraries: pandas, numpy, requests, os, json, overpy

The data was extracted from OpenStreetMap via Overpass API and Overpass-Turbo. The programming language used by Overpass-Turbo is parallel to XML with some differences. In this website the user can construct a query and extract the raw file as a JSON, GEOJSON or XML. The data was extracted as a JSON in parts to make smaller queries. In each query the area was predefined as London and the query was done for nodes (direct lat lon coordinates) and for ways (polygons composed of nodes indicating buildings, parks, etc). Amenity, Shop, Tourism and Leisure were extracted as both: nodes and ways. Though the data was fairly clean, it was necessary to iterate every row and extract amenity type from ‘tags’, as well as coordinates for ways. The way query contains coordinates for the centre of the polygon which where extracted in the same iteration. 

Additional cleaning was necessary after joining all tables together to delete amenities that are not pertinent for this study: amenities where no interaction amongst humans exist even if these provide a service such as: atm, vending_machine, post_box, waste_bin, picnic_table. Initially it was decided to label these as urban furniture but discarded later on. 

After the cleaning a new column was created to further categorise groups of amenities for example: college, school, kindergarten, as education. health_clinic, hospital, as health. town_hall, parliament as government, etc. 

Additional data was also downloaded from the london store site. Data containing population at ward level, jobs in the area (indicating day population), income, house prices and public transport accessibility score.

The data was uploaded to MySQL in two separate tables (amenities and london_info) for the rest of the study. 


DATA ANALYSIS:

The programming language used is Python and libraries like pandas, numpy, scipy, scikit, shapely, matplotlib etc.

- Clustering Methods (THIS IS COPIED FROM MY REPORT, PLEASE PARAPHRASE)

we are testing three different density based clustering methods to identify neighborhood scale agglomerations of amenities. We start by using the Density Based Spatial Clustering Algorithm with Noise (DBSCAN) and then we tested Hierarchical Density-Based Spatial Clustering of Applications with Noise (HDBSCAN), which is based on DBSCAN but you don’t need to specify the epsilon distance around each point and also it allows for varying density clusters. At the end, we examined the Agglomerative Clustering method where each point begins in its own cluster and then merge with others ones based on different criteria. The method that meets our needs for this study is HDBSCAN as it creates attractive neighbourhoods that correspond successfully to most of the amenities concentrations in London.


- Clustering Boundaries (THIS IS COPIED FROM MY REPORT, PLEASE PARAPHRASE)

Now that we have our amenities in clusters we need to define the spatial boundaries of those neighbourhoods, ie. the area occupied by a set of points within a cluster in order to check local variables of that specific area. The first attempt was made by determining the convex hull of our points which does not always represent the actual outline of the cluster because it does not take into account concave polygons. Therefore, we studied the concept of alpha shape which is based on Delaunay triangulation and is capable of constructing non-convex enclosure on a group of points.


- Spearman’s Rank Correlation Coefficient (THIS IS COPIED FROM MY REPORT, PLEASE PARAPHRASE)

Having the identified clusters in London we examine the probability for the amenities to be co-located in the same cluster by investigating the spearman’s rank correlation coefficient which calculates the strength and direction of association between two ranked variables.


- Hierarchical Clustering (THIS IS COPIED FROM MY REPORT, PLEASE PARAPHRASE)

Our aim is to group the different clusters together based on their most popular amenities in order to create fewer sets of clusters that share similar types and populations of amenities. To do so, we focus on the different clusters and we deal with them as if they were points with multi-dimensional coordinates which in our case would be the populations of the different amenities. The main purpose of using Hierarchical clustering is that it enables us to determine manually the number of clusters by choosing a distance cut-off, plotted on the dendrogram, and then name those clusters based on the amenities that they share.

- Interpolation



- Shannon’s Diversity Index





WEBSITE:




API:

